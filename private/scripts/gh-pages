#!/usr/bin/env bash

TARGET_DIR=tools/x-docs/public/*
TARGET_BRANCH=gh-pages
TEMP_DIR=tmp

# Set error handling
set -eu -o pipefail

# Set GitHub user information (the email must match the SSH key provided to Circle)
git config --global user.email $GITHUB_EMAIL
git config --global user.name $GITHUB_NAME

# HACK: Add GitHub to known hosts to avoid an interactive prompt when cloning over SSH
ssh-keyscan -H github.com >> ~/.ssh/known_hosts

# Clone only the branch we need so we don't download all of the project history
git clone $CIRCLE_REPOSITORY_URL $TEMP_DIR --single-branch --branch $TARGET_BRANCH

# Remove all of the files, -q prevents logging every filename
cd $TEMP_DIR
git rm -rq .
cd ..

# Copy over of the new files
cp -r $TARGET_DIR $TEMP_DIR
cd $TEMP_DIR

# Add CI config to instruct Circle to ignore this branch
mkdir .circleci

cat >.circleci/config.yml <<EOL
version: 2

jobs:
  build:
    branches:
      ignore:
        - gh-pages
EOL

# Stage and commit all of the files, silencing the list output
git add -A &> /dev/null
git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

# Push to the target branch, staying quiet unless something goes wrong
git push -q origin $TARGET_BRANCH
