version: 2

references:

  #
  # Workspace
  #
  container_config_node8: &container_config_node8
    working_directory: ~/project/build
    docker:
      - image: circleci/node:8.15

  workspace_root: &workspace_root
    ~/project

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  #
  # Cache keys
  #
  cache_keys_root: &cache_keys_root
    keys:
      - cache-root-v1-{{ .Branch }}-{{ checksum "./package.json" }}

  cache_keys_docs: &cache_keys_docs
    keys:
      - cache-docs-v1-{{ .Branch }}-{{ checksum "./tools/x-docs/package.json" }}

  #
  # Cache creation
  #
  create_cache_root: &create_cache_root
    save_cache:
      key: cache-root-v1-{{ .Branch }}-{{ checksum "./package.json" }}
      paths:
        - ./node_modules/

  create_cache_docs: &create_cache_docs
    save_cache:
      key: cache-docs-v1-{{ .Branch }}-{{ checksum "./tools/x-docs/package.json" }}
      paths:
        - ./tools/x-docs/node_modules/

  #
  # Cache restoration
  #
  restore_cache_root: &restore_cache_root
    restore_cache:
      <<: *cache_keys_root

  restore_cache_docs: &restore_cache_docs
    restore_cache:
      <<: *cache_keys_docs

  #
  # Filters
  #
  filters_branch_build: &filters_branch_build
    branches:
      ignore:
        - gh-pages
    tags:
      ignore: /.*/

  filters_release_build: &filters_release_build
    tags:
      only:
        - /^v\d+\.\d+\.\d+(?:-\w+\.\d+)?$/
    branches:
      ignore: /.*/

  filters_prerelease_build: &filters_prerelease_build
    tags:
      only:
        - /^x-[a-z-]+-v0\.\d+\.\d+(-\w+\.\d+)?$/
    branches:
      ignore: /.*/

  filters_master_branch: &filters_master_branch
    branches:
      only:
        - master

jobs:

  build:
    <<: *container_config_node8
    steps:
      - checkout
      - run:
          name: Checkout next-ci-shared-helpers
          command: git clone --depth 1 git@github.com:Financial-Times/next-ci-shared-helpers.git .circleci/shared-helpers
      - *restore_cache_root
      - *restore_cache_docs
      - run:
          name: Install project dependencies
          command: make install
      - run:
          name: Run the project build task
          command: make build
      - *create_cache_root
      - *create_cache_docs
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  test:
    <<: *container_config_node8
    steps:
      - *attach_workspace
      - run:
          name: Run tests
          command: make test

  publish:
    <<: *container_config_node8
    steps:
      - *attach_workspace
      - run:
          name: shared-helper / npm-store-auth-token
          command: .circleci/shared-helpers/helper-npm-store-auth-token
      - run:
          name: Bump version
          command: npx athloi version ${CIRCLE_TAG}
      - run:
          name: NPM publish
          command: npx athloi publish -- --access=public

  prerelease:
    <<: *container_config_node8
    steps:
      - *attach_workspace
      - run:
          name: shared-helper / npm-store-auth-token
          command: .circleci/shared-helpers/helper-npm-store-auth-token
      - run:
          name: Extract tag name and version number
          command: |
            # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
            export PRERELEASE_SEMVER='v0\.[0-9]{1,2}\.[0-9]{1,2}(-[a-z]+\.[0-9])?'
            export TARGET_VERSION=$(echo $CIRCLE_TAG | grep -o -E $PRERELEASE_SEMVER);
            export TARGET_MODULE=$(echo $CIRCLE_TAG | sed -E "s/-${PRERELEASE_SEMVER}//g");
            echo "export TARGET_VERSION=$TARGET_VERSION" >> $BASH_ENV;
            echo "export TARGET_MODULE=$TARGET_MODULE" >> $BASH_ENV;
            echo "Creating prerelease ${TARGET_VERSION} for ${TARGET_MODULE}";
      - run:
          name: Bump version number
          command: npx athloi -F ${TARGET_MODULE} version ${TARGET_VERSION};
      - run:
          name: NPM publish
          command: npx athloi -F ${TARGET_MODULE} publish -- --access=public --tag=pre-release

  deploy:
    <<: *container_config_node8
    steps:
      - *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - "2b:98:17:21:34:bf:5d:3b:15:a5:82:77:90:11:03:e9"
      - run:
          name: Publish GitHub Pages
          command: ./private/scripts/gh-pages

workflows:

  version: 2

  build-test:
    jobs:
      - build:
          filters:
            <<: *filters_branch_build
      - test:
          filters:
            <<: *filters_branch_build
          requires:
            - build
      - deploy:
          filters:
            <<: *filters_master_branch
          requires:
            - test

  build-test-publish-deploy:
    jobs:
      - build:
          filters:
            <<: *filters_release_build
      - test:
          filters:
            <<: *filters_release_build
          requires:
            - build
      - publish:
          filters:
            <<: *filters_release_build
          requires:
            - test
      - deploy:
          filters:
            <<: *filters_release_build
          requires:
            - publish

  build-test-prerelease:
    jobs:
      - build:
          filters:
            <<: *filters_prerelease_build
      - test:
          filters:
            <<: *filters_prerelease_build
          requires:
            - build
      - prerelease:
          filters:
            <<: *filters_prerelease_build
          requires:
            - test

notify:
  webhooks:
    - url: https://ft-next-webhooks.herokuapp.com/circleci2-workflow
